import 'bloc/k30_bloc.dart';import 'models/k30_model.dart';import 'package:bcc33_s_application1/core/app_export.dart';import 'package:bcc33_s_application1/core/utils/validation_functions.dart';import 'package:bcc33_s_application1/widgets/app_bar/appbar_leading_image.dart';import 'package:bcc33_s_application1/widgets/app_bar/appbar_title.dart';import 'package:bcc33_s_application1/widgets/app_bar/appbar_trailing_iconbutton.dart';import 'package:bcc33_s_application1/widgets/app_bar/custom_app_bar.dart';import 'package:bcc33_s_application1/widgets/custom_checkbox_button.dart';import 'package:bcc33_s_application1/widgets/custom_drop_down.dart';import 'package:bcc33_s_application1/widgets/custom_elevated_button.dart';import 'package:bcc33_s_application1/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class K30Screen extends StatelessWidget {K30Screen({Key? key}) : super(key: key);

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

static Widget builder(BuildContext context) { return BlocProvider<K30Bloc>(create: (context) => K30Bloc(K30State(k30ModelObj: K30Model()))..add(K30InitialEvent()), child: K30Screen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: Form(key: _formKey, child: Container(width: 361.h, margin: EdgeInsets.fromLTRB(16.h, 4.v, 16.h, 5.v), padding: EdgeInsets.all(24.h), decoration: AppDecoration.outlineBlack90026.copyWith(borderRadius: BorderRadiusStyle.roundedBorder32), child: Column(mainAxisSize: MainAxisSize.min, children: [Container(width: 313.h, padding: EdgeInsets.symmetric(vertical: 1.v), decoration: AppDecoration.outlineBlueGray, child: Text("lbl_new_beneficiary".tr, style: CustomTextStyles.titleMediumInterPrimary)), SizedBox(height: 23.v), SizedBox(height: 220.v, width: 313.h, child: Stack(alignment: Alignment.topLeft, children: [Align(alignment: Alignment.center, child: Container(padding: EdgeInsets.only(top: 24.v, bottom: 23.v), decoration: AppDecoration.outlineGray300, child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.end, children: [SizedBox(height: 9.v), Container(padding: EdgeInsets.fromLTRB(16.h, 12.v, 16.h, 11.v), decoration: AppDecoration.outlineOnPrimary2, child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [_buildEngland(context), BlocSelector<K30Bloc, K30State, K30Model?>(selector: (state) => state.k30ModelObj, builder: (context, k30ModelObj) {return CustomDropDown(width: 24.adaptSize, icon: Container(decoration: BoxDecoration(borderRadius: BorderRadius.circular(8.h)), child: CustomImageView(imagePath: ImageConstant.imgArrowdownOnprimarycontainer, height: 24.adaptSize, width: 24.adaptSize)), items: k30ModelObj?.dropdownItemList ?? [], borderDecoration: DropDownStyleHelper.radiusTL8, filled: false, onChanged: (value) {context.read<K30Bloc>().add(ChangeDropDownEvent(value: value));});})])), SizedBox(height: 8.v), _buildKingTChalla(context), SizedBox(height: 8.v), _buildKingTChalla1(context)]))), Align(alignment: Alignment.topLeft, child: Text("lbl_bank_details".tr.toUpperCase(), style: CustomTextStyles.labelLargePrimary))])), SizedBox(height: 23.v), SizedBox(height: 220.v, width: 313.h, child: Stack(alignment: Alignment.topLeft, children: [Align(alignment: Alignment.center, child: Container(padding: EdgeInsets.only(top: 24.v, bottom: 23.v), decoration: AppDecoration.outlineBlueGray, child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.end, children: [SizedBox(height: 9.v), _buildKingTChalla2(context), SizedBox(height: 8.v), _buildKingTChalla3(context), SizedBox(height: 8.v), Row(mainAxisAlignment: MainAxisAlignment.center, children: [_buildKingTChalla4(context), _buildZipcode(context)])]))), Align(alignment: Alignment.topLeft, child: Text("lbl_pesonal_details".tr.toUpperCase(), style: CustomTextStyles.labelLargePrimary))])), SizedBox(height: 24.v), _buildAddBeneficiary(context)]))))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(leadingWidth: 40.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgIcons1, margin: EdgeInsets.only(left: 16.h, top: 16.v, bottom: 16.v)), title: AppbarTitle(text: "lbl_transfers".tr, margin: EdgeInsets.only(left: 16.h)), actions: [AppbarTrailingIconbutton(imagePath: ImageConstant.imgAvatarsGray900, margin: EdgeInsets.symmetric(horizontal: 16.h, vertical: 12.v))]); } 
/// Section Widget
Widget _buildEngland(BuildContext context) { return BlocSelector<K30Bloc, K30State, bool?>(selector: (state) => state.england, builder: (context, england) {return CustomCheckboxButton(text: "lbl_england".tr, value: england, padding: EdgeInsets.symmetric(vertical: 3.v), textStyle: CustomTextStyles.labelLargeInterPrimary, onChange: (value) {context.read<K30Bloc>().add(ChangeCheckBoxEvent(value: value));});}); } 
/// Section Widget
Widget _buildKingTChalla(BuildContext context) { return BlocSelector<K30Bloc, K30State, TextEditingController?>(selector: (state) => state.kingTChallaController, builder: (context, kingTChallaController) {return CustomTextFormField(controller: kingTChallaController, hintText: "msg_gb80barc20040139494817".tr, borderDecoration: TextFormFieldStyleHelper.outlineOnPrimaryTL12, fillColor: theme.colorScheme.onPrimary);}); } 
/// Section Widget
Widget _buildKingTChalla1(BuildContext context) { return BlocSelector<K30Bloc, K30State, TextEditingController?>(selector: (state) => state.kingTChallaController1, builder: (context, kingTChallaController1) {return CustomTextFormField(controller: kingTChallaController1, hintText: "lbl_mi6ahms".tr, borderDecoration: TextFormFieldStyleHelper.outlineOnPrimaryTL121, fillColor: theme.colorScheme.onPrimary);}); } 
/// Section Widget
Widget _buildKingTChalla2(BuildContext context) { return BlocSelector<K30Bloc, K30State, TextEditingController?>(selector: (state) => state.kingTChallaController2, builder: (context, kingTChallaController2) {return CustomTextFormField(controller: kingTChallaController2, hintText: "lbl_james".tr, borderDecoration: TextFormFieldStyleHelper.outlineOnPrimaryTL12, fillColor: theme.colorScheme.onPrimary);}); } 
/// Section Widget
Widget _buildKingTChalla3(BuildContext context) { return BlocSelector<K30Bloc, K30State, TextEditingController?>(selector: (state) => state.kingTChallaController3, builder: (context, kingTChallaController3) {return CustomTextFormField(controller: kingTChallaController3, hintText: "lbl_bond".tr, borderDecoration: TextFormFieldStyleHelper.outlineOnPrimaryTL12, fillColor: theme.colorScheme.onPrimary);}); } 
/// Section Widget
Widget _buildKingTChalla4(BuildContext context) { return Expanded(child: Padding(padding: EdgeInsets.only(right: 4.h), child: BlocSelector<K30Bloc, K30State, TextEditingController?>(selector: (state) => state.kingTChallaController4, builder: (context, kingTChallaController4) {return CustomTextFormField(controller: kingTChallaController4, hintText: "lbl_skyfall".tr, borderDecoration: TextFormFieldStyleHelper.outlineOnPrimaryTL12, fillColor: theme.colorScheme.onPrimary);}))); } 
/// Section Widget
Widget _buildZipcode(BuildContext context) { return Expanded(child: Padding(padding: EdgeInsets.only(left: 4.h), child: BlocSelector<K30Bloc, K30State, TextEditingController?>(selector: (state) => state.zipcodeController, builder: (context, zipcodeController) {return CustomTextFormField(controller: zipcodeController, hintText: "lbl_zip_code".tr, textInputAction: TextInputAction.done, textInputType: TextInputType.number, validator: (value) {if (!isNumeric(value)) {return "err_msg_please_enter_valid_number".tr;} return null;}, borderDecoration: TextFormFieldStyleHelper.outlineOnPrimaryTL122, fillColor: theme.colorScheme.onPrimary);}))); } 
/// Section Widget
Widget _buildAddBeneficiary(BuildContext context) { return CustomElevatedButton(text: "lbl_add_beneficiary".tr.toUpperCase(), onPressed: () {onTapAddBeneficiary(context);}); } 
/// Navigates to the k27Screen when the action is triggered.
onTapAddBeneficiary(BuildContext context) { NavigatorService.pushNamed(AppRoutes.k27Screen, ); } 
 }
